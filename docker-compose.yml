version: '3.8'

services:
  postgres:
    image: postgres:14
    container_name: erp_postgres
    environment:
      POSTGRES_USER: erp_user
      POSTGRES_PASSWORD: erp_password
      POSTGRES_DB: erp_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - erp_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U erp_user -d erp_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G

  pgadmin:
    image: dpage/pgadmin4
    container_name: erp_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@erp.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - erp_network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: erp_backend
    environment:
      - POSTGRES_USER=erp_user
      - POSTGRES_PASSWORD=erp_password
      - POSTGRES_DB=erp_db
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - JWT_SECRET=local_development_secret
      - JWT_EXPIRES_IN=1d
      - NODE_ENV=development
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - erp_network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: erp_frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:5000/api
      - NODE_ENV=development
    depends_on:
      - backend
    networks:
      - erp_network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

networks:
  erp_network:
    driver: bridge

volumes:
  postgres_data: 