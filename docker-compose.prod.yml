version: '3.8'

services:
  postgres:
    image: postgres:14-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - erp_network

  backend:
    image: ${DOCKERHUB_USERNAME}/erp-backend:latest
    environment:
      NODE_ENV: production
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_NAME: ${POSTGRES_DB}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN}
    restart: unless-stopped
    depends_on:
      - postgres
    networks:
      - erp_network

  frontend:
    image: ${DOCKERHUB_USERNAME}/erp-frontend:latest
    environment:
      REACT_APP_API_URL: ${API_URL}
    restart: unless-stopped
    depends_on:
      - backend
    networks:
      - erp_network

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    networks:
      - erp_network

networks:
  erp_network:
    driver: bridge

volumes:
  postgres_data: 